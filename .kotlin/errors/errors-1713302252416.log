kotlin version: 2.0.0-Beta5
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: C:/Users/Cliente/Jetbrains/Projetos/Project Dream/src/main/kotlin/dream/utils/stat/FloatStatistics.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:51)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:30)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:17)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.CompilerPipelineKt.generateCodeFromIr(compilerPipeline.kt:239)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.CompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(compilerPipeline.kt:138)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:156)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1663)
	at jdk.internal.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:medianByFloat visibility:public modality:FINAL <K, V> ($receiver:kotlin.collections.Map<K of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.collections.List<V of dream.utils.stat.FloatStatisticsKt.medianByFloat>>, selector:kotlin.Function1<V of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.Float>) returnType:kotlin.collections.Map<K of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.Double>
  TYPE_PARAMETER name:K index:0 variance: superTypes:[kotlin.Any?] reified:false
  TYPE_PARAMETER name:V index:1 variance: superTypes:[kotlin.Any?] reified:false
  $receiver: VALUE_PARAMETER name:<this> type:kotlin.collections.Map<K of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.collections.List<V of dream.utils.stat.FloatStatisticsKt.medianByFloat>>
  VALUE_PARAMETER name:selector index:0 type:kotlin.Function1<V of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.Float>
  BLOCK_BODY
    RETURN type=kotlin.Nothing from='public final fun medianByFloat <K, V> (selector: kotlin.Function1<V of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.Float>): kotlin.collections.Map<K of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.Double> declared in dream.utils.stat.FloatStatisticsKt'
      CALL 'public final fun associate <T, K, V> (transform: kotlin.Function1<T of kotlin.collections.CollectionsKt.associate, kotlin.Pair<K of kotlin.collections.CollectionsKt.associate, V of kotlin.collections.CollectionsKt.associate>>): kotlin.collections.Map<K of kotlin.collections.CollectionsKt.associate, V of kotlin.collections.CollectionsKt.associate> [inline] declared in kotlin.collections.CollectionsKt' type=kotlin.collections.Map<K of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.Double> origin=null
        <T>: kotlin.collections.Map.Entry<K of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.collections.List<V of dream.utils.stat.FloatStatisticsKt.medianByFloat>>
        <K>: K of dream.utils.stat.FloatStatisticsKt.medianByFloat
        <V>: kotlin.Double
        $receiver: CALL 'public abstract fun <get-entries> (): kotlin.collections.Set<kotlin.collections.Map.Entry<K of kotlin.collections.Map, V of kotlin.collections.Map>> declared in kotlin.collections.Map' type=kotlin.collections.Set<kotlin.collections.Map.Entry<K of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.collections.List<V of dream.utils.stat.FloatStatisticsKt.medianByFloat>>> origin=GET_PROPERTY
          $this: GET_VAR '<this>: kotlin.collections.Map<K of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.collections.List<V of dream.utils.stat.FloatStatisticsKt.medianByFloat>> declared in dream.utils.stat.FloatStatisticsKt.medianByFloat' type=kotlin.collections.Map<K of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.collections.List<V of dream.utils.stat.FloatStatisticsKt.medianByFloat>> origin=null
        transform: BLOCK type=kotlin.Function1<kotlin.collections.Map.Entry<K of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.collections.List<V of dream.utils.stat.FloatStatisticsKt.medianByFloat>>, kotlin.Pair<K of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.Double>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun medianByFloat$lambda$44 <K, V> ($selector: kotlin.Function1<V of dream.utils.stat.FloatStatisticsKt.medianByFloat$lambda$44, kotlin.Float>, it: kotlin.collections.Map.Entry<K of dream.utils.stat.FloatStatisticsKt.medianByFloat$lambda$44, kotlin.collections.List<V of dream.utils.stat.FloatStatisticsKt.medianByFloat$lambda$44>>): kotlin.Pair<K of dream.utils.stat.FloatStatisticsKt.medianByFloat$lambda$44, kotlin.Double> declared in dream.utils.stat.FloatStatisticsKt' type=kotlin.Function1<kotlin.collections.Map.Entry<K of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.collections.List<V of dream.utils.stat.FloatStatisticsKt.medianByFloat>>, kotlin.Pair<K of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.Double>> origin=INLINE_LAMBDA reflectionTarget=null
            <K>: K of dream.utils.stat.FloatStatisticsKt.medianByFloat
            <V>: V of dream.utils.stat.FloatStatisticsKt.medianByFloat
            $selector: GET_VAR 'selector: kotlin.Function1<V of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.Float> declared in dream.utils.stat.FloatStatisticsKt.medianByFloat' type=kotlin.Function1<V of dream.utils.stat.FloatStatisticsKt.medianByFloat, kotlin.Float> origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:51)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:43)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:385)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:402)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$7(PhaseBuilders.kt:136)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:72)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 44 more
Caused by: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at org.jetbrains.org.objectweb.asm.tree.MethodNode.visitTypeInsn(MethodNode.java:358)
	at org.jetbrains.org.objectweb.asm.MethodVisitor.visitTypeInsn(MethodVisitor.java:374)
	at org.jetbrains.kotlin.codegen.inline.MaxStackFrameSizeAndLocalsCalculator.visitTypeInsn(MaxStackFrameSizeAndLocalsCalculator.java:162)
	at org.jetbrains.org.objectweb.asm.MethodVisitor.visitTypeInsn(MethodVisitor.java:374)
	at org.jetbrains.org.objectweb.asm.MethodVisitor.visitTypeInsn(MethodVisitor.java:374)
	at org.jetbrains.org.objectweb.asm.commons.MethodRemapper.visitTypeInsn(MethodRemapper.java:193)
	at org.jetbrains.org.objectweb.asm.commons.InstructionAdapter.anew(InstructionAdapter.java:1210)
	at org.jetbrains.kotlin.codegen.inline.MethodInliner$doInline$lambdaInliner$1.anew(MethodInliner.kt:234)
	at org.jetbrains.org.objectweb.asm.commons.InstructionAdapter.visitTypeInsn(InstructionAdapter.java:473)
	at org.jetbrains.org.objectweb.asm.tree.TypeInsnNode.accept(TypeInsnNode.java:77)
	at org.jetbrains.org.objectweb.asm.tree.InsnList.accept(InsnList.java:144)
	at org.jetbrains.org.objectweb.asm.tree.MethodNode.accept(MethodNode.java:751)
	at org.jetbrains.kotlin.codegen.inline.MethodInliner.doInline(MethodInliner.kt:427)
	at org.jetbrains.kotlin.codegen.inline.MethodInliner.doInline(MethodInliner.kt:98)
	at org.jetbrains.kotlin.codegen.inline.MethodInliner.doInline(MethodInliner.kt:72)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.inlineCall(InlineCodegen.kt:127)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:52)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:162)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:642)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitReturn(ExpressionCodegen.kt:1040)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitReturn(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrReturn.accept(IrReturn.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:574)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:122)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)


