kotlin version: 2.0.0-Beta5
error message: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't transform method node:
floatRange (Ljava/util/Map;)Ljava/util/Map;:
  @Lorg/jetbrains/annotations/NotNull;() // invisible
    // annotable parameter count: 1 (visible)
    // annotable parameter count: 1 (invisible)
    @Lorg/jetbrains/annotations/NotNull;() // invisible, parameter 0
   L0
    ALOAD 0
    LDC "<this>"
    INVOKESTATIC kotlin/jvm/internal/Intrinsics.checkNotNullParameter (Ljava/lang/Object;Ljava/lang/String;)V
   L1
    LINENUMBER 179 L1
    ALOAD 0
    INVOKEINTERFACE java/util/Map.entrySet ()Ljava/util/Set; (itf)
    CHECKCAST java/lang/Iterable
    ASTORE 1
    INVOKESTATIC kotlin/jvm/internal/InlineMarker.beforeInlineCall ()V
    NOP
   L2
    ICONST_0
    ISTORE 2
   L3
    LINENUMBER 757 L3
    ALOAD 1
    BIPUSH 10
    INVOKESTATIC kotlin/collections/CollectionsKt.collectionSizeOrDefault (Ljava/lang/Iterable;I)I
    INVOKESTATIC kotlin/collections/MapsKt.mapCapacity (I)I
    BIPUSH 16
    INVOKESTATIC kotlin/ranges/RangesKt.coerceAtLeast (II)I
    ISTORE 3
   L4
    LINENUMBER 758 L4
    ALOAD 1
    ASTORE 4
    NEW java/util/LinkedHashMap
    DUP
    ILOAD 3
    INVOKESPECIAL java/util/LinkedHashMap.<init> (I)V
    CHECKCAST java/util/Map
    ASTORE 5
   L5
    ICONST_0
    ISTORE 6
   L6
    LINENUMBER 759 L6
    ALOAD 4
    INVOKEINTERFACE java/lang/Iterable.iterator ()Ljava/util/Iterator; (itf)
    ASTORE 7
   L7
    ALOAD 7
    INVOKEINTERFACE java/util/Iterator.hasNext ()Z (itf)
    IFEQ L8
    ALOAD 7
    INVOKEINTERFACE java/util/Iterator.next ()Ljava/lang/Object; (itf)
    ASTORE 8
   L9
    LINENUMBER 760 L9
    ALOAD 5
    ASTORE 9
    ALOAD 8
    CHECKCAST java/util/Map$Entry
    ASTORE 10
    INVOKESTATIC kotlin/jvm/internal/InlineMarker.beforeInlineCall ()V
   L10
    ICONST_0
    ISTORE 11
   L11
    LINENUMBER 179 L11
    ALOAD 10
    INVOKEINTERFACE java/util/Map$Entry.getKey ()Ljava/lang/Object; (itf)
    ALOAD 10
    INVOKEINTERFACE java/util/Map$Entry.getValue ()Ljava/lang/Object; (itf)
    CHECKCAST java/lang/Iterable
    INVOKESTATIC dream/utils/stat/FloatStatisticsKt.floatRange (Ljava/lang/Iterable;)Lkotlin/ranges/ClosedFloatingPointRange;
    INVOKESTATIC kotlin/TuplesKt.to (Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/Pair;
    NOP
    GOTO L12
   L12
    INVOKESTATIC kotlin/jvm/internal/InlineMarker.afterInlineCall ()V
   L13
    LINENUMBER 760 L13
    CHECKCAST kotlin/Pair
    ASTORE 10
    ALOAD 9
    ALOAD 10
    INVOKEVIRTUAL kotlin/Pair.getFirst ()Ljava/lang/Object;
    ALOAD 10
    INVOKEVIRTUAL kotlin/Pair.getSecond ()Ljava/lang/Object;
    INVOKEINTERFACE java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; (itf)
    POP
   L14
    GOTO L7
   L8
    LINENUMBER 762 L8
    ALOAD 5
   L15
    LINENUMBER 758 L15
    NOP
    GOTO L16
   L16
    INVOKESTATIC kotlin/jvm/internal/InlineMarker.afterInlineCall ()V
   L17
    LINENUMBER 179 L17
    ARETURN
   L18
    NOP
   L19
    LOCALVARIABLE $i$a$-associate-FloatStatisticsKt$floatRange$2 I L11 L12 11
    LOCALVARIABLE it Ljava/util/Map$Entry; L10 L12 10
    LOCALVARIABLE element$iv$iv Ljava/lang/Object; L9 L14 8
    LOCALVARIABLE $i$f$associateTo I L6 L15 6
    LOCALVARIABLE $this$associateTo$iv$iv Ljava/lang/Iterable; L5 L15 4
    LOCALVARIABLE destination$iv$iv Ljava/util/Map; L5 L15 5
    LOCALVARIABLE $i$f$associate I L3 L16 2
    LOCALVARIABLE capacity$iv I L4 L16 3
    LOCALVARIABLE $this$associate$iv Ljava/lang/Iterable; L2 L16 1
    LOCALVARIABLE $this$floatRange Ljava/util/Map; L0 L19 0
    MAXSTACK = 3
    MAXLOCALS = 12

File is unknown
The root cause java.lang.OutOfMemoryError was thrown at: unknown
	at org.jetbrains.kotlin.codegen.TransformationMethodVisitor.visitEnd(TransformationMethodVisitor.kt:89)
	at org.jetbrains.org.objectweb.asm.MethodVisitor.visitEnd(MethodVisitor.java:783)
	at org.jetbrains.org.objectweb.asm.tree.MethodNode.accept(MethodNode.java:772)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:450)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$7(PhaseBuilders.kt:136)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:72)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:30)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:17)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.CompilerPipelineKt.generateCodeFromIr(compilerPipeline.kt:239)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.CompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(compilerPipeline.kt:138)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:156)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1663)
	at jdk.internal.reflect.GeneratedMethodAccessor13.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.OutOfMemoryError: GC overhead limit exceeded


